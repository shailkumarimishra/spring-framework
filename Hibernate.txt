Hibernate/JPA:- 
      It is a persistance framework, which is used to implement persistance operations or database operations.
	  Hibernate framework was implemented by Red Hat.
	  Architect of Hibernate is Gavin King.
	  Hibernate is a ORM(Object Relation Mapping) Tool and is best amoung all other persistance frameworks like-
	  iBatis,JDO,toplink.
	  Hibernate can be implemented either with xml or annotation approach.
	  Hibernate core is implemented on the top of JDBC Technology.
	  When you write JDBC code for implementing database operations you need to write the following-
	  try{
	  1: getConnection
	  2: prepare the sql statement
	  3: create the JDBC statement
	  4: submit the sql query to database
	  5: process the result
	  
	  }catch(){
	  
	  }finally{
	   
	  6: cleanup the resources 
	  
	  }
	  In the above code statements(1,3,4,6) are common in JDBC program. It gives you the code duplication problem.
	  Java Developer is responsible for generating primary key, writting sql statements, cleaning the resources,
	  processing the ResultSet, implementing batch updates.
	  
Hibernate Features:-
      1: Hibernate system is responsible for getting the connection, creating statements and releasing the        resources.
	  2: Hibernate system is responsible for generating sql quers.
      3: Hibernate system is responsible for generating primary key, Hibernate provides many built-in primary key
         generation algorithms and supports to implement your own custom primary key generation algorithm.	  
      4: Hibernate supports various mapping styles.
         a: simple mapping
         b: collection mapping
         c: inheitance mapping
            1: table per subclass mapping
            2: table per class mapping(single table)
            3: table per concrete class mapping
         d: association mapping
            1: one to one mapping
            2: one to many mapping
            3: many to many mapping
      5: Hibernate supports two ways to manage connection
         a: DriverManager connection
         b: DataSource connection
	  6: Hibernate supports two ways to manage transactions 
         a: JDBC transactions(outside the ejb or spring container)
         b: JTA transactions(inside the ejb or spring container)
      7: Hibernate has in-buit supports for batch updates.
      8: Hibernate provides various object oriented query language
         a: HQL 
         b: QBC
         c: Native SQL
         d: Named SQL
      9: Hibernate provides various catching mechanisms.
     10: Hibernate system uses many persistance best practices and forces to developer to use them for better 
         performance.

## Association Mapping :-
---------------------------

1. OneToOne (Bidirectional)
step1: Employee class must contain Account as an attribute and vice-versa refer oneToone mapping example. 
step2: Put @OneToOne and @JoinColumn(name="fk_emp_id") in Account class like below-
         @OneToOne
	     @JoinColumn(name = "fk_emp_id")
	   private Employee emp;
step3: Put @OneToOne(mappedBy="emp") in Employee class like below -
         @OneToOne(mappedBy = "emp")
	     private Account account;

2. OneToOne(Unidirectional)
step1: In Account class put @OneToOne and @JoinColumn(name="fk_emp_id") in Account class like below-
         @OneToOne
	     @JoinColumn(name = "fk_emp_id")
	     private Employee emp; 		 
      	  
	  
	  
	  
	  
	  
	  